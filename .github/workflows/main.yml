name: Build Project

on: 
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install dependencies on Ubuntu
      - name: Install dependencies on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential libboost-all-dev ninja-build

      - name: Build on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
          cmake --build build

      # Install dependencies on macOS
      - name: Install dependencies on macOS
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install cmake boost ninja

      - name: Build on macOS
        if: matrix.os == 'macos-latest'
        run: |
          cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
          cmake --build build

      # Install dependencies on Windows
      - name: Install dependencies on Windows
        if: matrix.os == 'windows-latest'
        run: |
          choco install -y cmake --installargs 'ADD_CMAKE_TO_PATH=System'
          choco install -y ninja
          refreshenv

      - name: Build on Windows
        if: matrix.os == 'windows-latest'
        shell: cmd
        env:
          BOOST_ROOT: C:/local/boost_1_82_0
        run: |
          set PATH=%ProgramFiles(x86)%\Microsoft Visual Studio\2019\BuildTools\VC\Tools\MSVC\14.29.30133\bin\Hostx64\x64;%PATH%
          cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
          cmake --build build

      # Upload compiled binaries as artifacts
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: GreedyMini-${{ matrix.os }}
          path: |
            build/GreedyMini*
